Журнал разработки веб-приложения "Wild West Bank Application".

1. На настоящий момент реализованы:
Классы модели - 
Account - сведения о счете
Customer - класс данных о клиенте.

DataRepository - класс, использующийся для извлечения данных о клиентах и их счетах из 
соответствующих файлов в папке "data" приложения.

Контроллер - 
MainController
Конструктор без параметров:
   MainController() - инициализирует внутреннее поле типа DataRepository, загружает в него данные 
из файлов.
Метод(ы):
   Customers() - отображает представление Customers.cshtml, передавая ему список из поля типа 
DataRepository.

Представления -
Customers.cshtml - отображает список клиентов банка.

Приложение отвечает на дефолтный маршрут вида "{controller}/{action}/{id}", по умолчанию 
напривляется на метод Customers контроллера Main.

2. Решена проблема с компоновками для представлений приложения - они добавлены в проект. 
Стилизована таблица со списком клиентов.
      1) В таблице сделаны сплошные границы.
      2) Сделано выравнивание идентификаторов клиентов по центру табличной ячейки.

3. Далее следует добавить в представление Customers.cshtml форму для добавления нового клиента.

Здесь проявляется проблема - привязка данных к свойству BirthDay модели Customer, имеющему тип 
DateTime. Сначала я решил, что нужно создавать специальный связыватель, но потом узнал, что в 
HTML5 есть элемент для ввода даты <input type="date" ... />, с которым может работать базовый 
связыватель.

4. Реализовать персистентность добавляемого клиента, чтобы он сохранялся в файле. Сделано.

5. Сделать так, чтобы имя клиента в таблице в представлении Customers.cshmtl являлось ссылкой,
при щелчке на которую вызывался метод действия Accounts контроллера Main, и в качестве параметра
URL маршрута передавать идентификатор клиента.

